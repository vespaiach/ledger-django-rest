openapi: 3.0.0
info:
    description: 'This is API documentation for Ledger API'
    version: '1.0.0'
    title: 'Ledger'
    contact:
        email: 'nta.toan@gmail.com'
    license:
        name: 'MIT'
        url: 'https://opensource.org/licenses/MIT'

servers:
    - url: https://ledger-django-rest.herokuapp.com/api
      description: Ledger server

paths:
    /token:
        post:
            tags:
                - token
            summary: Exchange username and password for an authentication token
            requestBody:
                description: ''
                required: true
                content:
                    application/json:
                        schema:
                            type: 'object'
                            properties:
                                username:
                                    type: string
                                password:
                                    type: string
                            example:
                                username: tester
                                password: 123

            responses:
                '200':
                    description: 'successfully exchanging for token'
                    content:
                        application/json:
                            schema:
                                type: 'object'
                                properties:
                                    token:
                                        type: string
                                        description: 'JWT token'
                                example:
                                    token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2NTEwNzM3MTksImlhdCI6MTY1MDk4NzMxOSwiaXNzIjoibGVkZ2VyOjoifQ.LxBpP49MvdKOkQV1Dxsq5HNLgakDIB_6Jl36Z-fD7hY
                '400':
                    description: 'username or password was not correct'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/validation_error'
        delete:
            tags:
                - token
            summary: 'Delete authentication token'
            responses:
                '204':
                    description: 'successfully delete token'
            security:
                - bearer_auth: []

    /transactions/{id}:
        get:
            tags:
                - transactions
            summary: Get a transaction by its id
            parameters:
                - name: id
                  in: path
                  description: Transaction Id
                  required: true
                  schema:
                      type: integer
            responses:
                '200':
                    description: 'Transaction details'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/transaction'
            security:
                - bearer_auth: []
        delete:
            tags:
                - transactions
            summary: Delete a transaction
            parameters:
                - name: id
                  in: path
                  description: Transaction Id
                  required: true
                  schema:
                      type: integer
            responses:
                '200':
                    description: 'successfully created token'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/transaction'
                '400':
                    description: 'Amount field is required'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/validation_error'
            security:
                - bearer_auth: []
        put:
            tags:
                - transactions
            summary: Update a transaction
            parameters:
                - name: id
                  in: path
                  description: Transaction Id
                  required: true
                  schema:
                      type: integer
            requestBody:
                description: 'Transaction payload'
                required: true
                content:
                    application/json:
                        schema:
                            type: 'object'
                            properties:
                                amount:
                                    type: integer
                                    example: 1000
                                date:
                                    type: string
                                    description: ISO 8601
                                    example: '2022-04-27 12:12:00.000+00:00'
                                note:
                                    type: string
                                    example: 'from giftcard'
                                reasons:
                                    type: array
                                    items:
                                        type: string
                                    example: ['tips']
            responses:
                '200':
                    description: 'successfully updated token'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/transaction'
                '400':
                    description: 'Amount field is required'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/validation_error'
            security:
                - bearer_auth: []

    /transactions:
        get:
            tags:
                - transactions
            summary: Query list of transactions
            parameters:
                - in: query
                  name: page
                  description: |
                      Page number for pagination. 
                      Default is set to 1, if not specified.
                  required: false
                  schema:
                      type: integer
                      example: 2
                - in: query
                  name: per_page
                  description: |
                      Record per page for pagination. 
                      Default is set to 50, if not specified.
                  required: false
                  schema:
                      type: integer
                      example: 20
                - in: query
                  name: from_date
                  description: |
                      Query transactions that recorded from a specified date and later.
                      Datetime string in iso 8601 format.
                  required: false
                  schema:
                      type: string
                      example: '2022-04-27 12:12:00.000+00:00'
                - in: query
                  name: to_date
                  description: |
                      Query transactions that recorded earlier or to a specified date.
                      Datetime string in iso 8601 format.
                  required: false
                  schema:
                      type: string
                      example: '2022-04-28 12:12:00.000+00:00'
                - in: query
                  name: from_amount
                  description: |
                      Query transactions that have amount equally or greater than a specified amount.
                  required: false
                  schema:
                      type: integer
                      example: -1000
                - in: query
                  name: to_amount
                  description: |
                      Query transactions that have amount equally or less than a specified amount.
                  required: false
                  schema:
                      type: integer
                      example: 1200
                - in: query
                  name: reasons
                  description: |
                      Query transactions that were tagged with texts.
                      List of texts separate by commas.
                  required: false
                  schema:
                      type: string
                      example: food,essentials
            responses:
                '200':
                    description: 'Transactions list'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/transaction'
                                    total_page:
                                        type: integer
                                        example: 1
                                    total_record:
                                        type: integer
                                        example: 1
            security:
                - bearer_auth: []
        post:
            tags:
                - transactions
            summary: Create a transaction
            requestBody:
                description: 'Transaction payload'
                required: true
                content:
                    application/json:
                        schema:
                            type: 'object'
                            properties:
                                amount:
                                    type: integer
                                    example: 1000
                                date:
                                    type: string
                                    description: ISO 8601
                                    example: '2022-04-27 12:12:00.000+00:00'
                                note:
                                    type: string
                                    example: 'from giftcard'
                                reasons:
                                    type: array
                                    items:
                                        type: string
                                    example: ['tips']

            responses:
                '200':
                    description: 'successfully created token'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/transaction'
                '400':
                    description: 'Amount field is required'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/validation_error'
            security:
                - bearer_auth: []

components:
    securitySchemes:
        bearer_auth:
            type: http
            scheme: bearer
            bearerFormat: JWT,

    schemas:
        validation_error:
            type: 'object'
            properties:
                message:
                    type: string
                fields:
                    type: object
        transaction:
            type: 'object'
            properties:
                id:
                    type: integer
                    example: 1
                amount:
                    type: integer
                    example: 1000
                date:
                    type: string
                    description: ISO 8601
                    example: '2022-04-27 12:12:00.000+00:00'
                note:
                    type: string
                    example: 'from giftcard'
                reasons:
                    type: array
                    items:
                        id:
                            type: integer
                        text:
                            type: string
                    example: [{ id: 1, text: 'tips' }]
